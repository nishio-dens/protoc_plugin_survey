#!/usr/bin/env ruby

ENV["BUNDLE_GEMFILE"] = File.join(__dir__, "Gemfile")
require "bundler"
Bundler.require
require "pry"

class Cli
  def run(debug_mode)
    rdata = debug_mode ? open("./test/read.dump", "rb").read : $stdin.read
    dump_file(rdata, "read.dump") unless debug_mode

    req = decode_req(rdata)
    res = process(req)

    wdata = encode_res(res)
    dump_file(wdata, "write.dump")
    $stdout.write(wdata)
  end

  def decode_req(req_pb)
    Google::Protobuf::Compiler::CodeGeneratorRequest.decode(req_pb)
  end

  def encode_res(res)
    res.to_proto
  end

  def process(req)
    files = req.proto_file.each_with_object({}) do |f, ret|
      ret[f.name] = f
    end

    res = Google::Protobuf::Compiler::CodeGeneratorResponse.new
    req.file_to_generate.each do |fname|
      f = files[fname]
      out = fname + ".dump"
      res.file << new_file(name: out, content: f.to_json)
    end

    res
  end

  def new_file(attrs)
    Google::Protobuf::Compiler::CodeGeneratorResponse::File.new(attrs)
  end

  private

  def dump_file(data, filename)
    open("./test/#{filename}", "wb") do |f|
      f.write data
    end
  end
end

Cli.new.run(debug_mode = !ENV["DEBUG_MODE"].blank?)
